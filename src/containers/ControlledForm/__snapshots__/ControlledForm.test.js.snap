// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ControlledForm tests Should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ControlledForm
    location={
        Object {
            "hash": "",
            "pathname": "",
            "search": "",
            "state": undefined,
          }
    }
    user={
        Object {
            "signedIn": false,
            "userInfo": Object {
              "email": "",
              "favorites": Array [],
              "id": "",
              "name": "",
              "password": "",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="form-button-container"
>
        <div
                className="login-buttons"
        >
                <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="login-button form-button"
                        to="/login"
                >
                        Login
                </NavLink>
                <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="login-button form-button"
                        to="/signup"
                >
                        Sign-up
                </NavLink>
        </div>
        <form
                onSubmit={[Function]}
        >
                <input
                        className="email"
                        onChange={[Function]}
                        placeholder="Email"
                        type="text"
                        value=""
                />
                <input
                        className="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                />
                <button
                        className="submit-button"
                        onClick={[Function]}
                        type="submit"
                >
                        Submit
                </button>
        </form>
        <div
                className="error-message"
        />
</div>,
      "className": "form-component",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="login-buttons"
>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="login-button form-button"
                        to="/login"
            >
                        Login
            </NavLink>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="login-button form-button"
                        to="/signup"
            >
                        Sign-up
            </NavLink>
</div>,
          <form
            onSubmit={[Function]}
>
            <input
                        className="email"
                        onChange={[Function]}
                        placeholder="Email"
                        type="text"
                        value=""
            />
            <input
                        className="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
            />
            <button
                        className="submit-button"
                        onClick={[Function]}
                        type="submit"
            >
                        Submit
            </button>
</form>,
          <div
            className="error-message"
/>,
        ],
        "className": "form-button-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="login-button form-button"
                to="/login"
>
                Login
</NavLink>,
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="login-button form-button"
                to="/signup"
>
                Sign-up
</NavLink>,
            ],
            "className": "login-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": "Login",
                "className": "login-button form-button",
                "to": "/login",
              },
              "ref": null,
              "rendered": "Login",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": "Sign-up",
                "className": "login-button form-button",
                "to": "/signup",
              },
              "ref": null,
              "rendered": "Sign-up",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <input
                className="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
/>,
              <input
                className="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
/>,
              <button
                className="submit-button"
                onClick={[Function]}
                type="submit"
>
                Submit
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "email",
                "onChange": [Function],
                "placeholder": "Email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "submit-button",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "error-message",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="form-button-container"
>
          <div
                    className="login-buttons"
          >
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="login-button form-button"
                              to="/login"
                    >
                              Login
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="login-button form-button"
                              to="/signup"
                    >
                              Sign-up
                    </NavLink>
          </div>
          <form
                    onSubmit={[Function]}
          >
                    <input
                              className="email"
                              onChange={[Function]}
                              placeholder="Email"
                              type="text"
                              value=""
                    />
                    <input
                              className="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                    />
                    <button
                              className="submit-button"
                              onClick={[Function]}
                              type="submit"
                    >
                              Submit
                    </button>
          </form>
          <div
                    className="error-message"
          />
</div>,
        "className": "form-component",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="login-buttons"
>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="login-button form-button"
                            to="/login"
              >
                            Login
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="login-button form-button"
                            to="/signup"
              >
                            Sign-up
              </NavLink>
</div>,
            <form
              onSubmit={[Function]}
>
              <input
                            className="email"
                            onChange={[Function]}
                            placeholder="Email"
                            type="text"
                            value=""
              />
              <input
                            className="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
              />
              <button
                            className="submit-button"
                            onClick={[Function]}
                            type="submit"
              >
                            Submit
              </button>
</form>,
            <div
              className="error-message"
/>,
          ],
          "className": "form-button-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="login-button form-button"
                  to="/login"
>
                  Login
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="login-button form-button"
                  to="/signup"
>
                  Sign-up
</NavLink>,
              ],
              "className": "login-buttons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Login",
                  "className": "login-button form-button",
                  "to": "/login",
                },
                "ref": null,
                "rendered": "Login",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "Sign-up",
                  "className": "login-button form-button",
                  "to": "/signup",
                },
                "ref": null,
                "rendered": "Sign-up",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <input
                  className="email"
                  onChange={[Function]}
                  placeholder="Email"
                  type="text"
                  value=""
/>,
                <input
                  className="password"
                  onChange={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
/>,
                <button
                  className="submit-button"
                  onClick={[Function]}
                  type="submit"
>
                  Submit
</button>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "email",
                  "onChange": [Function],
                  "placeholder": "Email",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "password",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                  "className": "submit-button",
                  "onClick": [Function],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "error-message",
            },
            "ref": null,
            "rendered": "",
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
